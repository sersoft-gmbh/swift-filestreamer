{
  "abstract" : [
    {
      "text" : "Returns an asynchronous sequence, up to the specified maximum length,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "containing the initial elements of the base asynchronous sequence.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FileStreamer\/documentation\/FileStreamer",
        "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream",
        "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence",
        "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/AsyncSequence-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/prefix(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "_Concurrency",
    "externalID" : "s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12FileStreamer0A6StreamV8SequenceV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "prefix"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Si",
        "text" : "Int"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:12_Concurrency19AsyncPrefixSequenceV",
        "text" : "AsyncPrefixSequence"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "FileStreamer"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "prefix(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "prefix"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "count"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Si",
              "text" : "Int"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:12_Concurrency19AsyncPrefixSequenceV",
              "text" : "AsyncPrefixSequence"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "An asynchronous sequence starting at the beginning of the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "base sequence with at most ",
              "type" : "text"
            },
            {
              "code" : "count",
              "type" : "codeVoice"
            },
            {
              "text" : " elements.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The maximum number of elements to return. The value of",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "count",
                  "type" : "codeVoice"
                },
                {
                  "text" : " must be greater than or equal to zero.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "count"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use ",
              "type" : "text"
            },
            {
              "code" : "prefix(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " to reduce the number of elements produced by the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "asynchronous sequence.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In this example, an asynchronous sequence called ",
              "type" : "text"
            },
            {
              "code" : "Counter",
              "type" : "codeVoice"
            },
            {
              "text" : " produces ",
              "type" : "text"
            },
            {
              "code" : "Int",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "values from ",
              "type" : "text"
            },
            {
              "code" : "1",
              "type" : "codeVoice"
            },
            {
              "text" : " to ",
              "type" : "text"
            },
            {
              "code" : "10",
              "type" : "codeVoice"
            },
            {
              "text" : ". The ",
              "type" : "text"
            },
            {
              "code" : "prefix(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " method causes the modified",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "sequence to pass through the first six values, then end.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "for await number in Counter(howHigh: 10).prefix(6) {",
            "    print(\"\\(number) \")",
            "}",
            "\/\/ prints \"1 2 3 4 5 6\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If the count passed to ",
              "type" : "text"
            },
            {
              "code" : "prefix(_:)",
              "type" : "codeVoice"
            },
            {
              "text" : " exceeds the number of elements in the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "base sequence, the result contains all of the elements in the sequence.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/filestreamer\/filestream\/sequence\/prefix(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FileStreamer/documentation/FileStreamer": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FileStreamer",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream": {
  "abstract" : [
    {
      "text" : "A file stream that continously reads the generic ",
      "type" : "text"
    },
    {
      "code" : "Value",
      "type" : "codeVoice"
    },
    {
      "text" : " type from a given file.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileStream"
    }
  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileStream"
    }
  ],
  "role" : "symbol",
  "title" : "FileStream",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream/Sequence": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sequence"
    }
  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sequence"
    }
  ],
  "role" : "symbol",
  "title" : "FileStream.Sequence",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream\/sequence"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream/Sequence/AsyncSequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/AsyncSequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AsyncSequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream\/sequence\/asyncsequence-implementations"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream/Sequence/prefix(_:)": {
  "abstract" : [
    {
      "text" : "Returns an asynchronous sequence, up to the specified maximum length,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "containing the initial elements of the base asynchronous sequence.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prefix"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12_Concurrency19AsyncPrefixSequenceV",
      "text" : "AsyncPrefixSequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/prefix(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prefix(_:)",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream\/sequence\/prefix(_:)"
}
}
}