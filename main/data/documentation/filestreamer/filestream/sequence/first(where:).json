{
  "abstract" : [
    {
      "text" : "Returns the first element of the sequence that satisfies the given",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "predicate.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FileStreamer\/documentation\/FileStreamer",
        "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream",
        "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence",
        "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/AsyncSequence-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/first(where:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "_Concurrency",
    "externalID" : "s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12FileStreamer0A6StreamV8SequenceV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "first"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "where"
      },
      {
        "kind" : "text",
        "text" : ": ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Element"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "rethrows"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Element"
      },
      {
        "kind" : "text",
        "text" : "?"
      }
    ],
    "modules" : [
      {
        "name" : "FileStreamer"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.15",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "13.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "6.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "first(where:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "first"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "predicate"
            },
            {
              "kind" : "text",
              "text" : ": ("
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "rethrows"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : "?"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The first element of the sequence that satisfies ",
              "type" : "text"
            },
            {
              "code" : "predicate",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or ",
              "type" : "text"
            },
            {
              "code" : "nil",
              "type" : "codeVoice"
            },
            {
              "text" : " if there is no element that satisfies ",
              "type" : "text"
            },
            {
              "code" : "predicate",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A closure that takes an element of the asynchronous",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "sequence as its argument and returns a Boolean value that indicates",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "whether the element is a match.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "predicate"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In this example, an asynchronous sequence called ",
              "type" : "text"
            },
            {
              "code" : "Counter",
              "type" : "codeVoice"
            },
            {
              "text" : " produces ",
              "type" : "text"
            },
            {
              "code" : "Int",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "values from ",
              "type" : "text"
            },
            {
              "code" : "1",
              "type" : "codeVoice"
            },
            {
              "text" : " to ",
              "type" : "text"
            },
            {
              "code" : "10",
              "type" : "codeVoice"
            },
            {
              "text" : ". The ",
              "type" : "text"
            },
            {
              "code" : "first(where:)",
              "type" : "codeVoice"
            },
            {
              "text" : " method returns the first",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "member of the sequence that’s evenly divisible by both ",
              "type" : "text"
            },
            {
              "code" : "2",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "3",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let divisibleBy2And3 = await Counter(howHigh: 10)",
            "    .first { $0 % 2 == 0 && $0 % 3 == 0 }",
            "print(divisibleBy2And3 ?? \"none\")",
            "\/\/ Prints: 6"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The predicate executes each time the asynchronous sequence produces an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "element, until either the predicate finds a match or the sequence ends.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/filestreamer\/filestream\/sequence\/first(where:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FileStreamer/documentation/FileStreamer": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FileStreamer",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream": {
  "abstract" : [
    {
      "text" : "A file stream that continously reads the generic ",
      "type" : "text"
    },
    {
      "code" : "Value",
      "type" : "codeVoice"
    },
    {
      "text" : " type from a given file.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileStream"
    }
  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileStream"
    }
  ],
  "role" : "symbol",
  "title" : "FileStream",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream/Sequence": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sequence"
    }
  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sequence"
    }
  ],
  "role" : "symbol",
  "title" : "FileStream.Sequence",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream\/sequence"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream/Sequence/AsyncSequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/AsyncSequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AsyncSequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream\/sequence\/asyncsequence-implementations"
},
"doc://FileStreamer/documentation/FileStreamer/FileStream/Sequence/first(where:)": {
  "abstract" : [
    {
      "text" : "Returns the first element of the sequence that satisfies the given",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "predicate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "first"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "where"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FileStreamer\/documentation\/FileStreamer\/FileStream\/Sequence\/first(where:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "first(where:)",
  "type" : "topic",
  "url" : "\/documentation\/filestreamer\/filestream\/sequence\/first(where:)"
}
}
}